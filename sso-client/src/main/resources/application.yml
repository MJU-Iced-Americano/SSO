server:
  port: 80

spring:
  application:
    name: SSO-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/master
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
      client:
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: login
          keycloak:
            issuer-uri: http://localhost:8080/realms/master
            user-name-attribute: preferred_username
        registration:
          google:
            client-id: #google client-id
            client-secret: #google client-secret
            scope:
              - email
              - profile
            redirect-uri : "http://localhost:8080/realms/master/broker/google/endpoint"
            client-name: Google
            provider: google
          keycloak:
            provider: keycloak
            client-id: SSOService
            client-secret: csBVAw33bdc7AKiA0C41vu282mcFXwUm
            scope: openid
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/keycloak'
          github:
            client-id: # github client-id
            client-secret: # github client-secret
            authorization-grant-type: authorization_code
            # Identity providers에 기본으로 주어진 redirect_url 써야 함
            # GitHub, Google에서 Oauth 설정할 때도 Identity providers에 기본으로 주어진 redirect_url로 설정 해줘야 함
            redirect-uri: "http://localhost:8080/realms/master/broker/github/endpoint"
            client-name: GitHub
            provider: github


jwt:
  auth:
    converter:
      resource-id: SSOService
      principal-attribute: preferred_username

keycloak:
  realm: master
#  client:
#    id: admin-cli
#  admin:
#    name: admin
#    password: 1234
#  server:
#    url: http://localhost:8080
  auth-server-url: http://localhost:8080/auth
  ssl-required: external
  resource: #클라이언트 id
  credentials:
    secret: #클라이언트 시크릿
  use-resource-role-mappings: true
  bearer-only: true

mykeycloak:
  client:
    id: admin-cli
  admin:
    name: admin
    password: 1234
